package main

import (
	"fmt"
	dns "github.com/mayankified/go-dns/pkg"
	"net"
)

const (
	MaxPacketSize = 512
	Port          = ":8053"
)

func main() {
	asciiArt := `
‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñà‚ñà‚ñì ‚ñà‚ñà‚ñà‚ñÑ    ‚ñà  ‚ñà    ‚ñà‚ñà    ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ  ‚ñà‚ñà‚ñà‚ñÑ    ‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
‚ñì  ‚ñà‚ñà‚ñí ‚ñì‚ñí‚ñì‚ñà‚ñà‚ñí ‚ñà‚ñà ‚ñÄ‚ñà   ‚ñà  ‚ñà‚ñà  ‚ñì‚ñà‚ñà‚ñí   ‚ñí‚ñà‚ñà‚ñÄ ‚ñà‚ñà‚ñå ‚ñà‚ñà ‚ñÄ‚ñà   ‚ñà ‚ñí‚ñà‚ñà    ‚ñí 
‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñí‚ñë‚ñí‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà  ‚ñÄ‚ñà ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà  ‚ñí‚ñà‚ñà‚ñë   ‚ñë‚ñà‚ñà   ‚ñà‚ñå‚ñì‚ñà‚ñà  ‚ñÄ‚ñà ‚ñà‚ñà‚ñí‚ñë ‚ñì‚ñà‚ñà‚ñÑ   
‚ñë ‚ñì‚ñà‚ñà‚ñì ‚ñë ‚ñë‚ñà‚ñà‚ñë‚ñì‚ñà‚ñà‚ñí  ‚ñê‚ñå‚ñà‚ñà‚ñí‚ñì‚ñì‚ñà  ‚ñë‚ñà‚ñà‚ñë   ‚ñë‚ñì‚ñà‚ñÑ   ‚ñå‚ñì‚ñà‚ñà‚ñí  ‚ñê‚ñå‚ñà‚ñà‚ñí  ‚ñí   ‚ñà‚ñà‚ñí
  ‚ñí‚ñà‚ñà‚ñí ‚ñë ‚ñë‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñë   ‚ñì‚ñà‚ñà‚ñë‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì    ‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñë   ‚ñì‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí
  ‚ñí ‚ñë‚ñë   ‚ñë‚ñì  ‚ñë ‚ñí‚ñë   ‚ñí ‚ñí ‚ñë‚ñí‚ñì‚ñí ‚ñí ‚ñí     ‚ñí‚ñí‚ñì  ‚ñí ‚ñë ‚ñí‚ñë   ‚ñí ‚ñí ‚ñí ‚ñí‚ñì‚ñí ‚ñí ‚ñë
    ‚ñë     ‚ñí ‚ñë‚ñë ‚ñë‚ñë   ‚ñë ‚ñí‚ñë‚ñë‚ñë‚ñí‚ñë ‚ñë ‚ñë     ‚ñë ‚ñí  ‚ñí ‚ñë ‚ñë‚ñë   ‚ñë ‚ñí‚ñë‚ñë ‚ñë‚ñí  ‚ñë ‚ñë
  ‚ñë       ‚ñí ‚ñë   ‚ñë   ‚ñë ‚ñë  ‚ñë‚ñë‚ñë ‚ñë ‚ñë     ‚ñë ‚ñë  ‚ñë    ‚ñë   ‚ñë ‚ñë ‚ñë  ‚ñë  ‚ñë  
          ‚ñë           ‚ñë    ‚ñë           ‚ñë             ‚ñë       ‚ñë  
                                     ‚ñë                          
	`
	fmt.Print(asciiArt)
	fmt.Printf("üí° Starting DNS Server...üí£\n")
	packetconn, err := net.ListenPacket("udp", Port)
	if err != nil {
		panic(err)
	}
	defer packetconn.Close()
	for {
		buff := make([]byte, MaxPacketSize)
		bytenum, addr, err := packetconn.ReadFrom(buff)
		if err != nil {
			fmt.Printf("Read Error from %s : %s \n", addr.String(), err)
			continue
		}
		go dns.HandlePacket(packetconn, addr, buff[:bytenum])
	}

}
